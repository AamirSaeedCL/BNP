// <auto-generated />
using AR.LinesManagementSystem.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AR.LinesManagementSystem.Api.Migrations
{
    [DbContext(typeof(ArDBContext))]
    partial class ArDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AR.LinesManagementSystem.Models.AntennaCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("AntennaCategories");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.AntennaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("AntennaTypes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.BudgetService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("BudgetServices");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Circuit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("AcceptedDate");

                    b.Property<string>("AccessBandWidth")
                        .HasMaxLength(250);

                    b.Property<short>("AssociatedCircuitId");

                    b.Property<string>("BandWidth")
                        .HasMaxLength(250);

                    b.Property<string>("CircuitNumber")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("ConfirmDeliveryDate");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTimeOffset>("DateSubmitted");

                    b.Property<int?>("DeliveryCategoryId");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("EntityInformation")
                        .HasMaxLength(500);

                    b.Property<string>("EntitySiteCode")
                        .HasMaxLength(250);

                    b.Property<string>("EsCircuit")
                        .HasMaxLength(500);

                    b.Property<int?>("LineStatusId");

                    b.Property<string>("Name");

                    b.Property<string>("NonESSharingEntity")
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("PendingDisconnectDate");

                    b.Property<DateTimeOffset>("PendingInstallDate");

                    b.Property<int?>("ServiceTypeId");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.Property<short>("UpgradedCircuitId");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryCategoryId");

                    b.HasIndex("LineStatusId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("Circuits");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.CircuitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("CircuitTypes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ConnectivityCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ConnectivityCategories");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ConnectivityProviderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ConnectivityProviderTypes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ConnectivityPurpose", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ConnectivityPurposes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ConnectivitySiteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ConnectivitySiteTypes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ConnectivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ConnectivityTypes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<DateTimeOffset>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("StartDate");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BandwidthCode")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<decimal>("Rate");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.DeliveryCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("DeliveryCategories");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.DeliveryLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("DeliveryLocation");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.DeliveryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("DeliveryTypes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.DiversityLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("DiversityLevels");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ISPType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ISPTypes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.LineStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("LineStatuses");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Network", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Networks");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Ownership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Ownership");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ProductLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ProductLines");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Reasons");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountCode")
                        .HasMaxLength(250);

                    b.Property<string>("AccountingUnit")
                        .HasMaxLength(250);

                    b.Property<string>("ActivityCode")
                        .HasMaxLength(250);

                    b.Property<string>("Address");

                    b.Property<int?>("AntennaCategoryId");

                    b.Property<string>("AntennaSpaceConstraints");

                    b.Property<int?>("AntennaTypeId");

                    b.Property<string>("AntennaTypeOther");

                    b.Property<string>("AssignedSystemAdmin");

                    b.Property<string>("AttachmentFileURL");

                    b.Property<int?>("BudgetServiceId");

                    b.Property<decimal>("BudgetedCost");

                    b.Property<decimal>("BudgetedMonth");

                    b.Property<string>("ChargeDetails");

                    b.Property<string>("CityCode")
                        .HasMaxLength(250);

                    b.Property<int?>("ContractId");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<int?>("CurrencyId");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<DateTimeOffset>("DateQuoteReceived");

                    b.Property<DateTimeOffset>("DateQuoteRequested");

                    b.Property<DateTimeOffset>("DateRequierd");

                    b.Property<DateTimeOffset>("DateSubmitted");

                    b.Property<string>("DeliveryLocation");

                    b.Property<string>("DeliveryLogisticRequirementsProviderDetails");

                    b.Property<string>("DemobilizationRequiredDetail");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("ESApproval");

                    b.Property<string>("EsApprovalDate");

                    b.Property<string>("EsApprovalNotes");

                    b.Property<string>("EsApprover");

                    b.Property<string>("EsApproverSignature");

                    b.Property<string>("GeographyCode")
                        .HasMaxLength(250);

                    b.Property<string>("GeomarketCode")
                        .HasMaxLength(250);

                    b.Property<string>("ITApproval");

                    b.Property<DateTimeOffset>("ITApprovalDate");

                    b.Property<string>("ITApprovalNotes");

                    b.Property<string>("ITApprover");

                    b.Property<string>("ITApproverSignature");

                    b.Property<string>("InBoundBandwidth")
                        .HasMaxLength(250);

                    b.Property<string>("InstallationRequiredDetail");

                    b.Property<bool>("IsBudgetService");

                    b.Property<bool>("IsCablingCabinToPoC");

                    b.Property<bool>("IsDemobilizationRequired");

                    b.Property<bool>("IsESApproval");

                    b.Property<bool>("IsEsBilledByProvider");

                    b.Property<bool>("IsEsCircuit");

                    b.Property<bool>("IsITApproval");

                    b.Property<bool>("IsInstallationRequired");

                    b.Property<bool>("IsMaintenanceServiceRequired");

                    b.Property<bool>("IsSiteSurveyRequired");

                    b.Property<bool>("IsTerminalRequired");

                    b.Property<string>("LicenseResponsibility");

                    b.Property<string>("MaintenanceServiceRequiredDetail");

                    b.Property<string>("Name");

                    b.Property<string>("NewService");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("NumberOfTerminal");

                    b.Property<string>("OrderDetail");

                    b.Property<string>("OutBoundBandwidth")
                        .HasMaxLength(250);

                    b.Property<int?>("OwnershipId");

                    b.Property<DateTimeOffset>("PendingDisconnectDate");

                    b.Property<int?>("ProductLineId");

                    b.Property<int?>("ProviderId");

                    b.Property<string>("Region")
                        .HasMaxLength(250);

                    b.Property<double>("RelatedServiceCost");

                    b.Property<int?>("RelatedServiceId");

                    b.Property<int?>("RequestActionId");

                    b.Property<int?>("RequestStatusId");

                    b.Property<string>("Requester")
                        .HasMaxLength(250);

                    b.Property<int?>("RigId");

                    b.Property<int?>("RigTypeId");

                    b.Property<string>("Risk");

                    b.Property<int?>("RouterId");

                    b.Property<string>("SLBFinancialApprover");

                    b.Property<int?>("SatelliteServiceId");

                    b.Property<string>("SchlumbergerEntity")
                        .HasMaxLength(250);

                    b.Property<string>("ScopeOfService");

                    b.Property<int?>("SegmentId");

                    b.Property<int?>("ServiceClassId");

                    b.Property<string>("ServiceConnectionDetail");

                    b.Property<int?>("ServiceConnectionTypeId");

                    b.Property<int?>("ServiceRequestReasonId");

                    b.Property<string>("ServiceTerm");

                    b.Property<int?>("ServiceTypeId");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(250);

                    b.Property<string>("SiteSurveyRequiredDetail");

                    b.Property<string>("SpecialDeliveryInstructions");

                    b.Property<int?>("SubProductLineId");

                    b.Property<int?>("SupplierId");

                    b.Property<int?>("SupplierMailingNameId");

                    b.Property<string>("TerminalSLAs");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.Property<decimal>("WSCCostDetailsLCBandwidth");

                    b.Property<decimal>("WSCCostDetailsLCOneTimeHubCost");

                    b.Property<decimal>("WSCCostDetailsLCOneTimeRemoteCost");

                    b.Property<decimal>("WSCCostDetailsLCOther1");

                    b.Property<decimal>("WSCCostDetailsLCOther2");

                    b.Property<decimal>("WSCCostDetailsLCOther3");

                    b.Property<decimal>("WSCCostDetailsLCSubTotal");

                    b.Property<decimal>("WSCCostDetailsLCTeleport");

                    b.Property<decimal>("WSCCostDetailsLCTerminal");

                    b.Property<decimal>("WSCCostDetailsLCTotalOneTime");

                    b.Property<decimal>("WSCCostDetailsLCTotalProviderMonthlyCost");

                    b.Property<decimal>("WSCCostDetailsUSDBandwidth");

                    b.Property<decimal>("WSCCostDetailsUSDOneTimeHubCost");

                    b.Property<decimal>("WSCCostDetailsUSDOneTimeRemoteCost");

                    b.Property<decimal>("WSCCostDetailsUSDOther1");

                    b.Property<decimal>("WSCCostDetailsUSDOther2");

                    b.Property<decimal>("WSCCostDetailsUSDOther3");

                    b.Property<decimal>("WSCCostDetailsUSDSubTotal");

                    b.Property<decimal>("WSCCostDetailsUSDTeleport");

                    b.Property<decimal>("WSCCostDetailsUSDTerminal");

                    b.Property<decimal>("WSCCostDetailsUSDTotalOneTime");

                    b.Property<decimal>("WSCCostDetailsUSDTotalProviderMonthlyCost");

                    b.HasKey("Id");

                    b.HasIndex("AntennaCategoryId");

                    b.HasIndex("AntennaTypeId");

                    b.HasIndex("BudgetServiceId");

                    b.HasIndex("ContractId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("OwnershipId");

                    b.HasIndex("ProductLineId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("RelatedServiceId");

                    b.HasIndex("RequestActionId");

                    b.HasIndex("RequestStatusId");

                    b.HasIndex("RigId");

                    b.HasIndex("RigTypeId");

                    b.HasIndex("RouterId");

                    b.HasIndex("SatelliteServiceId");

                    b.HasIndex("SegmentId");

                    b.HasIndex("ServiceClassId");

                    b.HasIndex("ServiceConnectionTypeId");

                    b.HasIndex("ServiceRequestReasonId");

                    b.HasIndex("ServiceTypeId");

                    b.HasIndex("SubProductLineId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("SupplierMailingNameId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.RequestAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RequestActions");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.RequestStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RequestStatuses");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Rig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Latitude");

                    b.Property<string>("Location");

                    b.Property<string>("Longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Operator");

                    b.Property<string>("Owner");

                    b.Property<int?>("RigTypeId");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("RigTypeId");

                    b.ToTable("Rigs");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.RigType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RigTypes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Router", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Routers");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.SatelliteService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("SatelliteServices");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Segment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<bool>("IsPreLoadedInRequest");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Segments");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ServiceClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ServiceClasses");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ServiceConnectionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ServiceConnectionType");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.SubProductLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int?>("ProductLineId");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("ProductLineId");

                    b.ToTable("SubProductLines");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("ContactCellPhone");

                    b.Property<string>("ContactEmailAddress");

                    b.Property<string>("ContactName");

                    b.Property<string>("ContactTelephone");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Area")
                        .HasMaxLength(10);

                    b.Property<string>("CountryCode")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Department")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .HasMaxLength(250);

                    b.Property<string>("GIN")
                        .HasMaxLength(8);

                    b.Property<string>("GeoSite")
                        .HasMaxLength(50);

                    b.Property<string>("Geomarket")
                        .HasMaxLength(50);

                    b.Property<string>("JobCode")
                        .HasMaxLength(50);

                    b.Property<string>("JobTitle")
                        .HasMaxLength(250);

                    b.Property<string>("LastName")
                        .HasMaxLength(250);

                    b.Property<string>("ManagerGIN")
                        .HasMaxLength(8);

                    b.Property<string>("Segment")
                        .HasMaxLength(50);

                    b.Property<string>("Telephone")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<int?>("RoleIdId");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<int>("UpdatedBy");

                    b.Property<int?>("UserIdId");

                    b.HasKey("Id");

                    b.HasIndex("RoleIdId");

                    b.HasIndex("UserIdId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Circuit", b =>
                {
                    b.HasOne("AR.LinesManagementSystem.Models.DeliveryCategory", "DeliveryCategory")
                        .WithMany()
                        .HasForeignKey("DeliveryCategoryId");

                    b.HasOne("AR.LinesManagementSystem.Models.LineStatus", "LineStatus")
                        .WithMany()
                        .HasForeignKey("LineStatusId");

                    b.HasOne("AR.LinesManagementSystem.Models.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Request", b =>
                {
                    b.HasOne("AR.LinesManagementSystem.Models.AntennaCategory", "AntennaCategory")
                        .WithMany()
                        .HasForeignKey("AntennaCategoryId");

                    b.HasOne("AR.LinesManagementSystem.Models.AntennaType", "AntennaType")
                        .WithMany()
                        .HasForeignKey("AntennaTypeId");

                    b.HasOne("AR.LinesManagementSystem.Models.BudgetService", "BudgetService")
                        .WithMany()
                        .HasForeignKey("BudgetServiceId");

                    b.HasOne("AR.LinesManagementSystem.Models.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("AR.LinesManagementSystem.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("AR.LinesManagementSystem.Models.Ownership", "Ownership")
                        .WithMany()
                        .HasForeignKey("OwnershipId");

                    b.HasOne("AR.LinesManagementSystem.Models.ProductLine", "ProductLine")
                        .WithMany()
                        .HasForeignKey("ProductLineId");

                    b.HasOne("AR.LinesManagementSystem.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.HasOne("AR.LinesManagementSystem.Models.Service", "RelatedService")
                        .WithMany()
                        .HasForeignKey("RelatedServiceId");

                    b.HasOne("AR.LinesManagementSystem.Models.RequestAction", "RequestAction")
                        .WithMany()
                        .HasForeignKey("RequestActionId");

                    b.HasOne("AR.LinesManagementSystem.Models.RequestStatus", "RequestStatus")
                        .WithMany()
                        .HasForeignKey("RequestStatusId");

                    b.HasOne("AR.LinesManagementSystem.Models.Rig", "Rig")
                        .WithMany()
                        .HasForeignKey("RigId");

                    b.HasOne("AR.LinesManagementSystem.Models.RigType", "RigType")
                        .WithMany()
                        .HasForeignKey("RigTypeId");

                    b.HasOne("AR.LinesManagementSystem.Models.Router", "Router")
                        .WithMany()
                        .HasForeignKey("RouterId");

                    b.HasOne("AR.LinesManagementSystem.Models.SatelliteService", "SatelliteService")
                        .WithMany()
                        .HasForeignKey("SatelliteServiceId");

                    b.HasOne("AR.LinesManagementSystem.Models.Segment", "Segment")
                        .WithMany()
                        .HasForeignKey("SegmentId");

                    b.HasOne("AR.LinesManagementSystem.Models.ServiceClass", "ServiceClass")
                        .WithMany()
                        .HasForeignKey("ServiceClassId");

                    b.HasOne("AR.LinesManagementSystem.Models.ServiceConnectionType", "ServiceConnectionType")
                        .WithMany()
                        .HasForeignKey("ServiceConnectionTypeId");

                    b.HasOne("AR.LinesManagementSystem.Models.Reason", "ServiceRequestReason")
                        .WithMany()
                        .HasForeignKey("ServiceRequestReasonId");

                    b.HasOne("AR.LinesManagementSystem.Models.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId");

                    b.HasOne("AR.LinesManagementSystem.Models.SubProductLine", "SubProductLine")
                        .WithMany()
                        .HasForeignKey("SubProductLineId");

                    b.HasOne("AR.LinesManagementSystem.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("AR.LinesManagementSystem.Models.Supplier", "SupplierMailingName")
                        .WithMany()
                        .HasForeignKey("SupplierMailingNameId");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.Rig", b =>
                {
                    b.HasOne("AR.LinesManagementSystem.Models.RigType", "RigType")
                        .WithMany()
                        .HasForeignKey("RigTypeId");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.SubProductLine", b =>
                {
                    b.HasOne("AR.LinesManagementSystem.Models.ProductLine", "ProductLine")
                        .WithMany("SubProductLine")
                        .HasForeignKey("ProductLineId");
                });

            modelBuilder.Entity("AR.LinesManagementSystem.Models.UserRole", b =>
                {
                    b.HasOne("AR.LinesManagementSystem.Models.Role", "RoleId")
                        .WithMany()
                        .HasForeignKey("RoleIdId");

                    b.HasOne("AR.LinesManagementSystem.Models.User", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdId");
                });
#pragma warning restore 612, 618
        }
    }
}
